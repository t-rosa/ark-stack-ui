/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as TreeViewImport } from './routes/tree-view'
import { Route as TooltipImport } from './routes/tooltip'
import { Route as ToggleGroupImport } from './routes/toggle-group'
import { Route as ToggleImport } from './routes/toggle'
import { Route as TimerImport } from './routes/timer'
import { Route as TagsInputImport } from './routes/tags-input'
import { Route as TabsImport } from './routes/tabs'
import { Route as SwitchImport } from './routes/switch'
import { Route as StepsImport } from './routes/steps'
import { Route as SplitterImport } from './routes/splitter'
import { Route as SliderImport } from './routes/slider'
import { Route as SignaturePadImport } from './routes/signature-pad'
import { Route as SelectImport } from './routes/select'
import { Route as SegmentGroupImport } from './routes/segment-group'
import { Route as RatingGroupImport } from './routes/rating-group'
import { Route as RadioGroupImport } from './routes/radio-group'
import { Route as QrCodeImport } from './routes/qr-code'
import { Route as ProgressImport } from './routes/progress'
import { Route as PopoverImport } from './routes/popover'
import { Route as PinInputImport } from './routes/pin-input'
import { Route as PaginationImport } from './routes/pagination'
import { Route as NumberInputImport } from './routes/number-input'
import { Route as MenuImport } from './routes/menu'
import { Route as HoverCardImport } from './routes/hover-card'
import { Route as FileUploadImport } from './routes/file-upload'
import { Route as FieldsetImport } from './routes/fieldset'
import { Route as FieldImport } from './routes/field'
import { Route as EditableImport } from './routes/editable'
import { Route as DialogImport } from './routes/dialog'
import { Route as DatePickerImport } from './routes/date-picker'
import { Route as ComboboxImport } from './routes/combobox'
import { Route as ColorPickerImport } from './routes/color-picker'
import { Route as CollapsibleImport } from './routes/collapsible'
import { Route as ClipboardImport } from './routes/clipboard'
import { Route as CheckboxImport } from './routes/checkbox'
import { Route as CarouselImport } from './routes/carousel'
import { Route as AvatarImport } from './routes/avatar'
import { Route as AccordionImport } from './routes/accordion'
import { Route as IndexImport } from './routes/index'

// Create/Update Routes

const TreeViewRoute = TreeViewImport.update({
  id: '/tree-view',
  path: '/tree-view',
  getParentRoute: () => rootRoute,
} as any)

const TooltipRoute = TooltipImport.update({
  id: '/tooltip',
  path: '/tooltip',
  getParentRoute: () => rootRoute,
} as any)

const ToggleGroupRoute = ToggleGroupImport.update({
  id: '/toggle-group',
  path: '/toggle-group',
  getParentRoute: () => rootRoute,
} as any)

const ToggleRoute = ToggleImport.update({
  id: '/toggle',
  path: '/toggle',
  getParentRoute: () => rootRoute,
} as any)

const TimerRoute = TimerImport.update({
  id: '/timer',
  path: '/timer',
  getParentRoute: () => rootRoute,
} as any)

const TagsInputRoute = TagsInputImport.update({
  id: '/tags-input',
  path: '/tags-input',
  getParentRoute: () => rootRoute,
} as any)

const TabsRoute = TabsImport.update({
  id: '/tabs',
  path: '/tabs',
  getParentRoute: () => rootRoute,
} as any)

const SwitchRoute = SwitchImport.update({
  id: '/switch',
  path: '/switch',
  getParentRoute: () => rootRoute,
} as any)

const StepsRoute = StepsImport.update({
  id: '/steps',
  path: '/steps',
  getParentRoute: () => rootRoute,
} as any)

const SplitterRoute = SplitterImport.update({
  id: '/splitter',
  path: '/splitter',
  getParentRoute: () => rootRoute,
} as any)

const SliderRoute = SliderImport.update({
  id: '/slider',
  path: '/slider',
  getParentRoute: () => rootRoute,
} as any)

const SignaturePadRoute = SignaturePadImport.update({
  id: '/signature-pad',
  path: '/signature-pad',
  getParentRoute: () => rootRoute,
} as any)

const SelectRoute = SelectImport.update({
  id: '/select',
  path: '/select',
  getParentRoute: () => rootRoute,
} as any)

const SegmentGroupRoute = SegmentGroupImport.update({
  id: '/segment-group',
  path: '/segment-group',
  getParentRoute: () => rootRoute,
} as any)

const RatingGroupRoute = RatingGroupImport.update({
  id: '/rating-group',
  path: '/rating-group',
  getParentRoute: () => rootRoute,
} as any)

const RadioGroupRoute = RadioGroupImport.update({
  id: '/radio-group',
  path: '/radio-group',
  getParentRoute: () => rootRoute,
} as any)

const QrCodeRoute = QrCodeImport.update({
  id: '/qr-code',
  path: '/qr-code',
  getParentRoute: () => rootRoute,
} as any)

const ProgressRoute = ProgressImport.update({
  id: '/progress',
  path: '/progress',
  getParentRoute: () => rootRoute,
} as any)

const PopoverRoute = PopoverImport.update({
  id: '/popover',
  path: '/popover',
  getParentRoute: () => rootRoute,
} as any)

const PinInputRoute = PinInputImport.update({
  id: '/pin-input',
  path: '/pin-input',
  getParentRoute: () => rootRoute,
} as any)

const PaginationRoute = PaginationImport.update({
  id: '/pagination',
  path: '/pagination',
  getParentRoute: () => rootRoute,
} as any)

const NumberInputRoute = NumberInputImport.update({
  id: '/number-input',
  path: '/number-input',
  getParentRoute: () => rootRoute,
} as any)

const MenuRoute = MenuImport.update({
  id: '/menu',
  path: '/menu',
  getParentRoute: () => rootRoute,
} as any)

const HoverCardRoute = HoverCardImport.update({
  id: '/hover-card',
  path: '/hover-card',
  getParentRoute: () => rootRoute,
} as any)

const FileUploadRoute = FileUploadImport.update({
  id: '/file-upload',
  path: '/file-upload',
  getParentRoute: () => rootRoute,
} as any)

const FieldsetRoute = FieldsetImport.update({
  id: '/fieldset',
  path: '/fieldset',
  getParentRoute: () => rootRoute,
} as any)

const FieldRoute = FieldImport.update({
  id: '/field',
  path: '/field',
  getParentRoute: () => rootRoute,
} as any)

const EditableRoute = EditableImport.update({
  id: '/editable',
  path: '/editable',
  getParentRoute: () => rootRoute,
} as any)

const DialogRoute = DialogImport.update({
  id: '/dialog',
  path: '/dialog',
  getParentRoute: () => rootRoute,
} as any)

const DatePickerRoute = DatePickerImport.update({
  id: '/date-picker',
  path: '/date-picker',
  getParentRoute: () => rootRoute,
} as any)

const ComboboxRoute = ComboboxImport.update({
  id: '/combobox',
  path: '/combobox',
  getParentRoute: () => rootRoute,
} as any)

const ColorPickerRoute = ColorPickerImport.update({
  id: '/color-picker',
  path: '/color-picker',
  getParentRoute: () => rootRoute,
} as any)

const CollapsibleRoute = CollapsibleImport.update({
  id: '/collapsible',
  path: '/collapsible',
  getParentRoute: () => rootRoute,
} as any)

const ClipboardRoute = ClipboardImport.update({
  id: '/clipboard',
  path: '/clipboard',
  getParentRoute: () => rootRoute,
} as any)

const CheckboxRoute = CheckboxImport.update({
  id: '/checkbox',
  path: '/checkbox',
  getParentRoute: () => rootRoute,
} as any)

const CarouselRoute = CarouselImport.update({
  id: '/carousel',
  path: '/carousel',
  getParentRoute: () => rootRoute,
} as any)

const AvatarRoute = AvatarImport.update({
  id: '/avatar',
  path: '/avatar',
  getParentRoute: () => rootRoute,
} as any)

const AccordionRoute = AccordionImport.update({
  id: '/accordion',
  path: '/accordion',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/accordion': {
      id: '/accordion'
      path: '/accordion'
      fullPath: '/accordion'
      preLoaderRoute: typeof AccordionImport
      parentRoute: typeof rootRoute
    }
    '/avatar': {
      id: '/avatar'
      path: '/avatar'
      fullPath: '/avatar'
      preLoaderRoute: typeof AvatarImport
      parentRoute: typeof rootRoute
    }
    '/carousel': {
      id: '/carousel'
      path: '/carousel'
      fullPath: '/carousel'
      preLoaderRoute: typeof CarouselImport
      parentRoute: typeof rootRoute
    }
    '/checkbox': {
      id: '/checkbox'
      path: '/checkbox'
      fullPath: '/checkbox'
      preLoaderRoute: typeof CheckboxImport
      parentRoute: typeof rootRoute
    }
    '/clipboard': {
      id: '/clipboard'
      path: '/clipboard'
      fullPath: '/clipboard'
      preLoaderRoute: typeof ClipboardImport
      parentRoute: typeof rootRoute
    }
    '/collapsible': {
      id: '/collapsible'
      path: '/collapsible'
      fullPath: '/collapsible'
      preLoaderRoute: typeof CollapsibleImport
      parentRoute: typeof rootRoute
    }
    '/color-picker': {
      id: '/color-picker'
      path: '/color-picker'
      fullPath: '/color-picker'
      preLoaderRoute: typeof ColorPickerImport
      parentRoute: typeof rootRoute
    }
    '/combobox': {
      id: '/combobox'
      path: '/combobox'
      fullPath: '/combobox'
      preLoaderRoute: typeof ComboboxImport
      parentRoute: typeof rootRoute
    }
    '/date-picker': {
      id: '/date-picker'
      path: '/date-picker'
      fullPath: '/date-picker'
      preLoaderRoute: typeof DatePickerImport
      parentRoute: typeof rootRoute
    }
    '/dialog': {
      id: '/dialog'
      path: '/dialog'
      fullPath: '/dialog'
      preLoaderRoute: typeof DialogImport
      parentRoute: typeof rootRoute
    }
    '/editable': {
      id: '/editable'
      path: '/editable'
      fullPath: '/editable'
      preLoaderRoute: typeof EditableImport
      parentRoute: typeof rootRoute
    }
    '/field': {
      id: '/field'
      path: '/field'
      fullPath: '/field'
      preLoaderRoute: typeof FieldImport
      parentRoute: typeof rootRoute
    }
    '/fieldset': {
      id: '/fieldset'
      path: '/fieldset'
      fullPath: '/fieldset'
      preLoaderRoute: typeof FieldsetImport
      parentRoute: typeof rootRoute
    }
    '/file-upload': {
      id: '/file-upload'
      path: '/file-upload'
      fullPath: '/file-upload'
      preLoaderRoute: typeof FileUploadImport
      parentRoute: typeof rootRoute
    }
    '/hover-card': {
      id: '/hover-card'
      path: '/hover-card'
      fullPath: '/hover-card'
      preLoaderRoute: typeof HoverCardImport
      parentRoute: typeof rootRoute
    }
    '/menu': {
      id: '/menu'
      path: '/menu'
      fullPath: '/menu'
      preLoaderRoute: typeof MenuImport
      parentRoute: typeof rootRoute
    }
    '/number-input': {
      id: '/number-input'
      path: '/number-input'
      fullPath: '/number-input'
      preLoaderRoute: typeof NumberInputImport
      parentRoute: typeof rootRoute
    }
    '/pagination': {
      id: '/pagination'
      path: '/pagination'
      fullPath: '/pagination'
      preLoaderRoute: typeof PaginationImport
      parentRoute: typeof rootRoute
    }
    '/pin-input': {
      id: '/pin-input'
      path: '/pin-input'
      fullPath: '/pin-input'
      preLoaderRoute: typeof PinInputImport
      parentRoute: typeof rootRoute
    }
    '/popover': {
      id: '/popover'
      path: '/popover'
      fullPath: '/popover'
      preLoaderRoute: typeof PopoverImport
      parentRoute: typeof rootRoute
    }
    '/progress': {
      id: '/progress'
      path: '/progress'
      fullPath: '/progress'
      preLoaderRoute: typeof ProgressImport
      parentRoute: typeof rootRoute
    }
    '/qr-code': {
      id: '/qr-code'
      path: '/qr-code'
      fullPath: '/qr-code'
      preLoaderRoute: typeof QrCodeImport
      parentRoute: typeof rootRoute
    }
    '/radio-group': {
      id: '/radio-group'
      path: '/radio-group'
      fullPath: '/radio-group'
      preLoaderRoute: typeof RadioGroupImport
      parentRoute: typeof rootRoute
    }
    '/rating-group': {
      id: '/rating-group'
      path: '/rating-group'
      fullPath: '/rating-group'
      preLoaderRoute: typeof RatingGroupImport
      parentRoute: typeof rootRoute
    }
    '/segment-group': {
      id: '/segment-group'
      path: '/segment-group'
      fullPath: '/segment-group'
      preLoaderRoute: typeof SegmentGroupImport
      parentRoute: typeof rootRoute
    }
    '/select': {
      id: '/select'
      path: '/select'
      fullPath: '/select'
      preLoaderRoute: typeof SelectImport
      parentRoute: typeof rootRoute
    }
    '/signature-pad': {
      id: '/signature-pad'
      path: '/signature-pad'
      fullPath: '/signature-pad'
      preLoaderRoute: typeof SignaturePadImport
      parentRoute: typeof rootRoute
    }
    '/slider': {
      id: '/slider'
      path: '/slider'
      fullPath: '/slider'
      preLoaderRoute: typeof SliderImport
      parentRoute: typeof rootRoute
    }
    '/splitter': {
      id: '/splitter'
      path: '/splitter'
      fullPath: '/splitter'
      preLoaderRoute: typeof SplitterImport
      parentRoute: typeof rootRoute
    }
    '/steps': {
      id: '/steps'
      path: '/steps'
      fullPath: '/steps'
      preLoaderRoute: typeof StepsImport
      parentRoute: typeof rootRoute
    }
    '/switch': {
      id: '/switch'
      path: '/switch'
      fullPath: '/switch'
      preLoaderRoute: typeof SwitchImport
      parentRoute: typeof rootRoute
    }
    '/tabs': {
      id: '/tabs'
      path: '/tabs'
      fullPath: '/tabs'
      preLoaderRoute: typeof TabsImport
      parentRoute: typeof rootRoute
    }
    '/tags-input': {
      id: '/tags-input'
      path: '/tags-input'
      fullPath: '/tags-input'
      preLoaderRoute: typeof TagsInputImport
      parentRoute: typeof rootRoute
    }
    '/timer': {
      id: '/timer'
      path: '/timer'
      fullPath: '/timer'
      preLoaderRoute: typeof TimerImport
      parentRoute: typeof rootRoute
    }
    '/toggle': {
      id: '/toggle'
      path: '/toggle'
      fullPath: '/toggle'
      preLoaderRoute: typeof ToggleImport
      parentRoute: typeof rootRoute
    }
    '/toggle-group': {
      id: '/toggle-group'
      path: '/toggle-group'
      fullPath: '/toggle-group'
      preLoaderRoute: typeof ToggleGroupImport
      parentRoute: typeof rootRoute
    }
    '/tooltip': {
      id: '/tooltip'
      path: '/tooltip'
      fullPath: '/tooltip'
      preLoaderRoute: typeof TooltipImport
      parentRoute: typeof rootRoute
    }
    '/tree-view': {
      id: '/tree-view'
      path: '/tree-view'
      fullPath: '/tree-view'
      preLoaderRoute: typeof TreeViewImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/accordion': typeof AccordionRoute
  '/avatar': typeof AvatarRoute
  '/carousel': typeof CarouselRoute
  '/checkbox': typeof CheckboxRoute
  '/clipboard': typeof ClipboardRoute
  '/collapsible': typeof CollapsibleRoute
  '/color-picker': typeof ColorPickerRoute
  '/combobox': typeof ComboboxRoute
  '/date-picker': typeof DatePickerRoute
  '/dialog': typeof DialogRoute
  '/editable': typeof EditableRoute
  '/field': typeof FieldRoute
  '/fieldset': typeof FieldsetRoute
  '/file-upload': typeof FileUploadRoute
  '/hover-card': typeof HoverCardRoute
  '/menu': typeof MenuRoute
  '/number-input': typeof NumberInputRoute
  '/pagination': typeof PaginationRoute
  '/pin-input': typeof PinInputRoute
  '/popover': typeof PopoverRoute
  '/progress': typeof ProgressRoute
  '/qr-code': typeof QrCodeRoute
  '/radio-group': typeof RadioGroupRoute
  '/rating-group': typeof RatingGroupRoute
  '/segment-group': typeof SegmentGroupRoute
  '/select': typeof SelectRoute
  '/signature-pad': typeof SignaturePadRoute
  '/slider': typeof SliderRoute
  '/splitter': typeof SplitterRoute
  '/steps': typeof StepsRoute
  '/switch': typeof SwitchRoute
  '/tabs': typeof TabsRoute
  '/tags-input': typeof TagsInputRoute
  '/timer': typeof TimerRoute
  '/toggle': typeof ToggleRoute
  '/toggle-group': typeof ToggleGroupRoute
  '/tooltip': typeof TooltipRoute
  '/tree-view': typeof TreeViewRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/accordion': typeof AccordionRoute
  '/avatar': typeof AvatarRoute
  '/carousel': typeof CarouselRoute
  '/checkbox': typeof CheckboxRoute
  '/clipboard': typeof ClipboardRoute
  '/collapsible': typeof CollapsibleRoute
  '/color-picker': typeof ColorPickerRoute
  '/combobox': typeof ComboboxRoute
  '/date-picker': typeof DatePickerRoute
  '/dialog': typeof DialogRoute
  '/editable': typeof EditableRoute
  '/field': typeof FieldRoute
  '/fieldset': typeof FieldsetRoute
  '/file-upload': typeof FileUploadRoute
  '/hover-card': typeof HoverCardRoute
  '/menu': typeof MenuRoute
  '/number-input': typeof NumberInputRoute
  '/pagination': typeof PaginationRoute
  '/pin-input': typeof PinInputRoute
  '/popover': typeof PopoverRoute
  '/progress': typeof ProgressRoute
  '/qr-code': typeof QrCodeRoute
  '/radio-group': typeof RadioGroupRoute
  '/rating-group': typeof RatingGroupRoute
  '/segment-group': typeof SegmentGroupRoute
  '/select': typeof SelectRoute
  '/signature-pad': typeof SignaturePadRoute
  '/slider': typeof SliderRoute
  '/splitter': typeof SplitterRoute
  '/steps': typeof StepsRoute
  '/switch': typeof SwitchRoute
  '/tabs': typeof TabsRoute
  '/tags-input': typeof TagsInputRoute
  '/timer': typeof TimerRoute
  '/toggle': typeof ToggleRoute
  '/toggle-group': typeof ToggleGroupRoute
  '/tooltip': typeof TooltipRoute
  '/tree-view': typeof TreeViewRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/accordion': typeof AccordionRoute
  '/avatar': typeof AvatarRoute
  '/carousel': typeof CarouselRoute
  '/checkbox': typeof CheckboxRoute
  '/clipboard': typeof ClipboardRoute
  '/collapsible': typeof CollapsibleRoute
  '/color-picker': typeof ColorPickerRoute
  '/combobox': typeof ComboboxRoute
  '/date-picker': typeof DatePickerRoute
  '/dialog': typeof DialogRoute
  '/editable': typeof EditableRoute
  '/field': typeof FieldRoute
  '/fieldset': typeof FieldsetRoute
  '/file-upload': typeof FileUploadRoute
  '/hover-card': typeof HoverCardRoute
  '/menu': typeof MenuRoute
  '/number-input': typeof NumberInputRoute
  '/pagination': typeof PaginationRoute
  '/pin-input': typeof PinInputRoute
  '/popover': typeof PopoverRoute
  '/progress': typeof ProgressRoute
  '/qr-code': typeof QrCodeRoute
  '/radio-group': typeof RadioGroupRoute
  '/rating-group': typeof RatingGroupRoute
  '/segment-group': typeof SegmentGroupRoute
  '/select': typeof SelectRoute
  '/signature-pad': typeof SignaturePadRoute
  '/slider': typeof SliderRoute
  '/splitter': typeof SplitterRoute
  '/steps': typeof StepsRoute
  '/switch': typeof SwitchRoute
  '/tabs': typeof TabsRoute
  '/tags-input': typeof TagsInputRoute
  '/timer': typeof TimerRoute
  '/toggle': typeof ToggleRoute
  '/toggle-group': typeof ToggleGroupRoute
  '/tooltip': typeof TooltipRoute
  '/tree-view': typeof TreeViewRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/accordion'
    | '/avatar'
    | '/carousel'
    | '/checkbox'
    | '/clipboard'
    | '/collapsible'
    | '/color-picker'
    | '/combobox'
    | '/date-picker'
    | '/dialog'
    | '/editable'
    | '/field'
    | '/fieldset'
    | '/file-upload'
    | '/hover-card'
    | '/menu'
    | '/number-input'
    | '/pagination'
    | '/pin-input'
    | '/popover'
    | '/progress'
    | '/qr-code'
    | '/radio-group'
    | '/rating-group'
    | '/segment-group'
    | '/select'
    | '/signature-pad'
    | '/slider'
    | '/splitter'
    | '/steps'
    | '/switch'
    | '/tabs'
    | '/tags-input'
    | '/timer'
    | '/toggle'
    | '/toggle-group'
    | '/tooltip'
    | '/tree-view'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/accordion'
    | '/avatar'
    | '/carousel'
    | '/checkbox'
    | '/clipboard'
    | '/collapsible'
    | '/color-picker'
    | '/combobox'
    | '/date-picker'
    | '/dialog'
    | '/editable'
    | '/field'
    | '/fieldset'
    | '/file-upload'
    | '/hover-card'
    | '/menu'
    | '/number-input'
    | '/pagination'
    | '/pin-input'
    | '/popover'
    | '/progress'
    | '/qr-code'
    | '/radio-group'
    | '/rating-group'
    | '/segment-group'
    | '/select'
    | '/signature-pad'
    | '/slider'
    | '/splitter'
    | '/steps'
    | '/switch'
    | '/tabs'
    | '/tags-input'
    | '/timer'
    | '/toggle'
    | '/toggle-group'
    | '/tooltip'
    | '/tree-view'
  id:
    | '__root__'
    | '/'
    | '/accordion'
    | '/avatar'
    | '/carousel'
    | '/checkbox'
    | '/clipboard'
    | '/collapsible'
    | '/color-picker'
    | '/combobox'
    | '/date-picker'
    | '/dialog'
    | '/editable'
    | '/field'
    | '/fieldset'
    | '/file-upload'
    | '/hover-card'
    | '/menu'
    | '/number-input'
    | '/pagination'
    | '/pin-input'
    | '/popover'
    | '/progress'
    | '/qr-code'
    | '/radio-group'
    | '/rating-group'
    | '/segment-group'
    | '/select'
    | '/signature-pad'
    | '/slider'
    | '/splitter'
    | '/steps'
    | '/switch'
    | '/tabs'
    | '/tags-input'
    | '/timer'
    | '/toggle'
    | '/toggle-group'
    | '/tooltip'
    | '/tree-view'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AccordionRoute: typeof AccordionRoute
  AvatarRoute: typeof AvatarRoute
  CarouselRoute: typeof CarouselRoute
  CheckboxRoute: typeof CheckboxRoute
  ClipboardRoute: typeof ClipboardRoute
  CollapsibleRoute: typeof CollapsibleRoute
  ColorPickerRoute: typeof ColorPickerRoute
  ComboboxRoute: typeof ComboboxRoute
  DatePickerRoute: typeof DatePickerRoute
  DialogRoute: typeof DialogRoute
  EditableRoute: typeof EditableRoute
  FieldRoute: typeof FieldRoute
  FieldsetRoute: typeof FieldsetRoute
  FileUploadRoute: typeof FileUploadRoute
  HoverCardRoute: typeof HoverCardRoute
  MenuRoute: typeof MenuRoute
  NumberInputRoute: typeof NumberInputRoute
  PaginationRoute: typeof PaginationRoute
  PinInputRoute: typeof PinInputRoute
  PopoverRoute: typeof PopoverRoute
  ProgressRoute: typeof ProgressRoute
  QrCodeRoute: typeof QrCodeRoute
  RadioGroupRoute: typeof RadioGroupRoute
  RatingGroupRoute: typeof RatingGroupRoute
  SegmentGroupRoute: typeof SegmentGroupRoute
  SelectRoute: typeof SelectRoute
  SignaturePadRoute: typeof SignaturePadRoute
  SliderRoute: typeof SliderRoute
  SplitterRoute: typeof SplitterRoute
  StepsRoute: typeof StepsRoute
  SwitchRoute: typeof SwitchRoute
  TabsRoute: typeof TabsRoute
  TagsInputRoute: typeof TagsInputRoute
  TimerRoute: typeof TimerRoute
  ToggleRoute: typeof ToggleRoute
  ToggleGroupRoute: typeof ToggleGroupRoute
  TooltipRoute: typeof TooltipRoute
  TreeViewRoute: typeof TreeViewRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AccordionRoute: AccordionRoute,
  AvatarRoute: AvatarRoute,
  CarouselRoute: CarouselRoute,
  CheckboxRoute: CheckboxRoute,
  ClipboardRoute: ClipboardRoute,
  CollapsibleRoute: CollapsibleRoute,
  ColorPickerRoute: ColorPickerRoute,
  ComboboxRoute: ComboboxRoute,
  DatePickerRoute: DatePickerRoute,
  DialogRoute: DialogRoute,
  EditableRoute: EditableRoute,
  FieldRoute: FieldRoute,
  FieldsetRoute: FieldsetRoute,
  FileUploadRoute: FileUploadRoute,
  HoverCardRoute: HoverCardRoute,
  MenuRoute: MenuRoute,
  NumberInputRoute: NumberInputRoute,
  PaginationRoute: PaginationRoute,
  PinInputRoute: PinInputRoute,
  PopoverRoute: PopoverRoute,
  ProgressRoute: ProgressRoute,
  QrCodeRoute: QrCodeRoute,
  RadioGroupRoute: RadioGroupRoute,
  RatingGroupRoute: RatingGroupRoute,
  SegmentGroupRoute: SegmentGroupRoute,
  SelectRoute: SelectRoute,
  SignaturePadRoute: SignaturePadRoute,
  SliderRoute: SliderRoute,
  SplitterRoute: SplitterRoute,
  StepsRoute: StepsRoute,
  SwitchRoute: SwitchRoute,
  TabsRoute: TabsRoute,
  TagsInputRoute: TagsInputRoute,
  TimerRoute: TimerRoute,
  ToggleRoute: ToggleRoute,
  ToggleGroupRoute: ToggleGroupRoute,
  TooltipRoute: TooltipRoute,
  TreeViewRoute: TreeViewRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/accordion",
        "/avatar",
        "/carousel",
        "/checkbox",
        "/clipboard",
        "/collapsible",
        "/color-picker",
        "/combobox",
        "/date-picker",
        "/dialog",
        "/editable",
        "/field",
        "/fieldset",
        "/file-upload",
        "/hover-card",
        "/menu",
        "/number-input",
        "/pagination",
        "/pin-input",
        "/popover",
        "/progress",
        "/qr-code",
        "/radio-group",
        "/rating-group",
        "/segment-group",
        "/select",
        "/signature-pad",
        "/slider",
        "/splitter",
        "/steps",
        "/switch",
        "/tabs",
        "/tags-input",
        "/timer",
        "/toggle",
        "/toggle-group",
        "/tooltip",
        "/tree-view"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/accordion": {
      "filePath": "accordion.tsx"
    },
    "/avatar": {
      "filePath": "avatar.tsx"
    },
    "/carousel": {
      "filePath": "carousel.tsx"
    },
    "/checkbox": {
      "filePath": "checkbox.tsx"
    },
    "/clipboard": {
      "filePath": "clipboard.tsx"
    },
    "/collapsible": {
      "filePath": "collapsible.tsx"
    },
    "/color-picker": {
      "filePath": "color-picker.tsx"
    },
    "/combobox": {
      "filePath": "combobox.tsx"
    },
    "/date-picker": {
      "filePath": "date-picker.tsx"
    },
    "/dialog": {
      "filePath": "dialog.tsx"
    },
    "/editable": {
      "filePath": "editable.tsx"
    },
    "/field": {
      "filePath": "field.tsx"
    },
    "/fieldset": {
      "filePath": "fieldset.tsx"
    },
    "/file-upload": {
      "filePath": "file-upload.tsx"
    },
    "/hover-card": {
      "filePath": "hover-card.tsx"
    },
    "/menu": {
      "filePath": "menu.tsx"
    },
    "/number-input": {
      "filePath": "number-input.tsx"
    },
    "/pagination": {
      "filePath": "pagination.tsx"
    },
    "/pin-input": {
      "filePath": "pin-input.tsx"
    },
    "/popover": {
      "filePath": "popover.tsx"
    },
    "/progress": {
      "filePath": "progress.tsx"
    },
    "/qr-code": {
      "filePath": "qr-code.tsx"
    },
    "/radio-group": {
      "filePath": "radio-group.tsx"
    },
    "/rating-group": {
      "filePath": "rating-group.tsx"
    },
    "/segment-group": {
      "filePath": "segment-group.tsx"
    },
    "/select": {
      "filePath": "select.tsx"
    },
    "/signature-pad": {
      "filePath": "signature-pad.tsx"
    },
    "/slider": {
      "filePath": "slider.tsx"
    },
    "/splitter": {
      "filePath": "splitter.tsx"
    },
    "/steps": {
      "filePath": "steps.tsx"
    },
    "/switch": {
      "filePath": "switch.tsx"
    },
    "/tabs": {
      "filePath": "tabs.tsx"
    },
    "/tags-input": {
      "filePath": "tags-input.tsx"
    },
    "/timer": {
      "filePath": "timer.tsx"
    },
    "/toggle": {
      "filePath": "toggle.tsx"
    },
    "/toggle-group": {
      "filePath": "toggle-group.tsx"
    },
    "/tooltip": {
      "filePath": "tooltip.tsx"
    },
    "/tree-view": {
      "filePath": "tree-view.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
